# use PREFIX | to split window horizontally and PREFIX - to split vertically
  bind | split-window -h
  bind - split-window -v

# map Vi movement keys as pane movement keys
  bind h select-pane -L
  bind j select-pane -D
  bind k select-pane -U
  bind l select-pane -R

# reload ~/.tmux.conf using PREFIX r
  bind r source-file ~/.tmux.conf \; display "Reloaded!"

setw -g mode-keys vi

unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Mouse support
 setw -g mode-mouse on
 set -g mouse-select-pane on
 set -g mouse-resize-pane on
 set -g mouse-select-window on

# Source: https://gist.github.com/snuggs/800936

# Automatically set window title
 setw -g automatic-rename

############################################################################
## Status Bar
#############################################################################
 set-option -g status-utf8 on
 set-option -g status-justify right
 set-option -g status-bg black # colour213 # pink
 set-option -g status-fg cyan
 set-option -g status-interval 5
 set-option -g status-left-length 30
 set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
 #set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
 set-option -g status-right '#[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
 set-option -g visual-activity on

# Titles (window number, program name, active (or not)
 set-option -g set-titles on
 set-option -g set-titles-string '#H:#S.#I.#P #W #T'

############################################################################
## windows
#############################################################################
 set-window-option -g window-status-current-bg white
 bind C-j previous-window
 bind C-k next-window
 bind-key C-a last-window # C-a C-a for last active window
 bind A command-prompt "rename-window %%"
 # By default, all windows in a session are constrained to the size of the
 # smallest client connected to that session,
 # even if both clients are looking at different windows.
 # It seems that in this particular case, Screen has the better default
 # where a window is only constrained in size if a smaller client
 # is actively looking at it.
 setw -g aggressive-resize on

# Copy in copy mode to system clipboard
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
